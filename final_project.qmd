---
title: "Final Project"
author: "Rodrick Mpofu"
format: 
  html:
    embed-resources: true
---

```{r Read the data}
# Read the data
library(tidyverse)
countries <- read_csv("data/countries.csv")
```


# Introduction

This is the final project for the course. The project is about the analysis of the countries dataset. The data is from Kaggle and can be found [here](https://www.kaggle.com/datasets/lucafrance/the-world-factbook-by-cia). It has 258 rows and 1036 columns.The dataset contains information about countries such as the country name, continent, population, area, GDP, and other variables. The goal of the project is to explore the dataset, analyze the data, and create visualizations to help understand the data better. The project will include data exploration, data visualization, and data analysis. 

# Data Description

The dataset contains the following variables:

- `Country: Name`: The name of the country.
- `Geography: Map references`: The continent the country belongs to.
- `Geography: Area - total`: The total area of the country in square kilometers.
- `Economy: Real GDP per capita`: The real GDP per capita of the country.
- `People and Society: Population`: The population of the country.
- `Government: Capital`: The capital city of the country.
- `Government: Government type`: The type of government of the country.
- `Government: Independence`: The date of independence of the country.
- `Government: National holiday`: The national holiday of the country.
- `Government: Constitution`: The date of the constitution of the country.
- `Government: Legal system`: The legal system of the country.    


# Data Exploration

```{r Explore the data}
# Display the first few rows of the dataset
head(countries)
```


```{r}
ggplot(countries, aes(x = `Geography: Map references`, 
                      fill = `Geography: Map references`)) +
  geom_bar() +
  labs(title = "Number of Countries by Continent",
       x = "Continent",
       y = "Number of Countries") +
  theme_minimal() +
  coord_flip()

```

```{r}
ggplot(countries, aes(x = `Geography: Map references`, 
                      y = `Geography: Area - total`, 
                      fill = `Geography: Map references`)) +
  geom_boxplot() +
  labs(title = "Area of Countries by Continent",
       x = "Continent",
       y = "Area (sq km)") +
  theme_minimal() +
  coord_flip()

```

```{r}

ggplot(countries, aes(x = `Geography: Map references`, 
                      y = `Economy: Real GDP per capita`, 
                      fill = `Geography: Map references`)) +
  geom_boxplot() +
  labs(title = "GDP per Capita by Continent",
       x = "Continent",
       y = "GDP per Capita") +
  theme_minimal() +
  coord_flip()

```

```{r}
ggplot(countries, aes(x = `Geography: Map references`, 
                      y = `People and Society: Population`, 
                      fill = `Geography: Map references`)) +
  geom_boxplot() +
  labs(title = "Population by Continent",
       x = "Continent",
       y = "Population") +
  theme_minimal() +
  coord_flip()

```

```{r}
ggplot(countries, aes(x = `Geography: Map references`, 
                      y = `Geography: Area - total`, 
                      fill = `Geography: Map references`)) +
  geom_point(aes(size = `People and Society: Population`)) +
  labs(title = "Population vs Area by Continent",
       x = "Area (sq km)",
       y = "Population") +
  theme_minimal() +
  coord_flip()

```

```{r}
ggplot(countries, aes(x = `Economy: Real GDP per capita`, 
                      y = `People and Society: Population`, 
                      color = `Geography: Map references`)) +
  geom_point() +
  labs(title = "Population vs GDP per Capita",
       x = "GDP per Capita",
       y = "Population") +
  theme_minimal()

```

```{r}
ggplot(countries, aes(x = `Economy: Real GDP per capita`, 
                      y = `Geography: Area - total`, 
                      color = `Geography: Map references`)) +
  geom_point() +
  labs(title = "Area vs GDP per Capita",
       x = "GDP per Capita",
       y = "Area (sq km)") +
  theme_minimal()

```

# heatmap

```{r}



```

