---
title: "Final Project Written Report"
author: "Rodrick Mpofu"
date: "05/03/2024"
format: 
  html:
    embed-resources: true
---

```{r Read the data}
#| echo: false
#| output: false
#| warning: false

# Read the data
library(tidyverse)
data_df <- read_csv("data/data.csv")
preprocessed_data_df <- read_csv("data/preprocessed_data.csv")
raw_fighter_df <- read_csv("data/raw_fighter_details.csv")
raw_total_fight_df <- read_delim("data/raw_total_fight_data.csv", delim = ";")
```

# Abstract

This project presents a comprehensive analysis of data from the Ultimate Fighting Championship (UFC), the mixed martial arts organization. Utilizing a dataset sourced from Kaggle, this study examines an array of variables including fighter attributes, fight outcomes, and statistical trends over time. The aim is to uncover underlying patterns in fight results, fighter characteristics, and performance metrics across different weight classes and fighting styles. Through data manipulation and data visualizations, this report highlights trends in fight outcomes, the popularity of different fighting stances, and the geographic distribution of fights. Additionally, the analysis enables a direct comparison between fighters, providing insights into their relative strengths and weaknesses. By exploring into these aspects, the project seeks to enhance understanding of factors that influence success in the UFC.

## Link to My GitHub Repository for the Project and Blog Post

- [GitHub Repository](https://github.com/rodrick-mpofu/ds334_final_project)
- [Blog Post](https://rodrick-mpofu.github.io/ds334blog/)

# Introduction

The Ultimate Fighting Championship (UFC) is the largest mixed martial arts (MMA) promotion company in the world featuring most of the top-ranked fighters in the sport. The organization showcases nine weight divisions and enforces the Unified Rules of Mixed Martial Arts. The UFC produces events worldwide that showcase twelve weight divisions and abide by the Unified Rules of Mixed Martial Arts. This report aims to analyze the UFC fight data to gain insights into the trends and patterns of the fights and fighters. The analysis will focus on various aspects of the data, including fighter characteristics, fight outcomes, and other relevant information. The report also aims to provide visualizations and statistical analysis to support the findings. The report also looks at the most common fight finishes, the most famous fighting styles and where most fights take place. The data used in this analysis was obtained from [Kaggle](https://www.kaggle.com/datasets/rajeevw/ufcdata/data) and contains information on fighters, fights, and preprocessed data.

## Data Overview

The data contains the following columns:

-   `R_` and `B_` prefix signifies red and blue corner fighter stats respectively
-   `_opp_` containing columns is the average of damage done by the opponent on the fighter
-   `KD` is number of knockdowns
-   `SIG_STR` is no. of significant strikes 'landed of attempted'
-   `SIG_STR_pct` is significant strikes percentage
-   `TOTAL_STR` is total strikes 'landed of attempted'
-   `TD` is no. of takedowns
-   `TD_pct` is takedown percentages
-   `SUB_ATT` is no. of submission attempts
-   `PASS` is no. times the guard was passed?
-   `REV` is the no. of Reversals landed
-   `HEAD` is no. of significant strinks to the head 'landed of attempted'
-   `BODY` is no. of significant strikes to the body 'landed of attempted'
-   `CLINCH` is no. of significant strikes in the clinch 'landed of attempted'
-   `GROUND` is no. of significant strikes on the ground 'landed of attempted'
-   `win_by` is method of win
-   `last_round` is last round of the fight (ex. if it was a KO in 1st, then this will be 1)
-   `last_round_time` is when the fight ended in the last round
-   `Format` is the format of the fight (3 rounds, 5 rounds etc.)
-   `Referee` is the name of the Ref
-   `date` is the date of the fight
-   `location` is the location in which the event took place
-   `Fight_type` is which weight class and whether it's a title bout or not
-   `Winner` is the winner of the fight
-   `Stance` is the stance of the fighter (orthodox, southpaw, etc.)
-   `Height_cms` is the height in centimeter
-   `Reach_cms` is the reach of the fighter (arm span) in centimeter
-   `Weight_lbs` is the weight of the fighter in pounds (lbs)
-   `age` is the age of the fighter
-   `title_bout` Boolean value of whether it is title fight or not
-   `weight_class` is which weight class the fight is in (Bantamweight, heavyweight, Women's flyweight, etc.)
-   `no_of_rounds` is the number of rounds the fight was scheduled for
-   `current_lose_streak` is the count of current concurrent losses of the fighter
-   `current_win_streak` is the count of current concurrent wins of the fighter
-   `draw` is the number of draws in the fighter's ufc career
-   `wins` is the number of wins in the fighter's ufc career
-   `losses` is the number of losses in the fighter's ufc career
-   `total_rounds_fought` is the average of total rounds fought by the fighter
-   `total_time_fought(seconds)` is the count of total time spent fighting in seconds
-   `total_title_bouts` is the total number of title bouts taken part in by the fighter
-   `win_by_Decision_Majority` is the number of wins by majority judges decision in the fighter's ufc career
-   `win_by_Decision_Split` is the number of wins by split judges decision in the fighter's ufc career
-   `win_by_Decision_Unanimous` is the number of wins by unanimous judges decision in the fighter's ufc career
-   `win_by_KO/TKO` is the number of wins by knockout in the fighter's ufc career
-   `win_by_Submission` is the number of wins by submission in the fighter's ufc career
-   `win_by_TKO_Doctor_Stoppage` is the number of wins by doctor stoppage in the fighter's ufc career

## Questions to Answer

1.  What are the trends of different fighter statistics over time?
2.  What are the most common ways fighters win?
3.  Where are UFC fights most common in the world or in the US?
4.  Can users to compare two fighters and see their statistics side by side to see who the better fighter is?

# Data Analysis and Visualization

## Distribution of Weight Classes

```{r}
#| warning: false
# Weight classes

data_df |>
  group_by(weight_class) |>
  summarise(Count = n()) |>
  arrange(desc(Count)) |>
  mutate(weight_class = factor(weight_class, 
                               levels = unique(weight_class)))|>
  ggplot(aes(x = weight_class, y = Count)) +
  geom_bar(stat = "identity", fill = "green2", color = "black") +
  theme_minimal(base_size = 20) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Weight Classes", x = "Weight Class", y = "Count")
```

The graph above shows the weight classes in the UFC. The most common weight class is Lightweight, followed by Welterweight and Middleweight. The least common weight classes are the open weight and catch weight classes and women's featherweight.

## Distribution of Fighting Stance

```{r}
#| warning: false
# Fighting stance


raw_fighter_df |>
  group_by(Stance) |>
  summarise(Count = n()) |>
  arrange(desc(Count)) |>
  mutate(Stance = factor(Stance, 
                         levels = unique(Stance)))|>
  ggplot(aes(x = Stance, y= Count)) +
  geom_bar(stat = "identity", fill = "green2", color = "black") +
  theme_minimal(base_size = 20) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Fighting Stance", x = "Stance", y = "Count")
```

The graph above shows the fighting stances of UFC fighters. The most common stance is orthodox, followed by southpaw and switch. The least common stance is the sideways stance.

## Distribution of Wins by Decision

```{r}
#| warning: false
# Wins by decision

raw_total_fight_df |>
  group_by(win_by) |>
  summarise(Count = n()) |>
  arrange(desc(Count)) |>
  mutate(win_by = factor(win_by, 
                         levels = unique(win_by)))|>
  ggplot(aes(x = win_by, y= Count)) +
  geom_bar(stat = "identity",fill = "green", color = "black") +
  theme_minimal(base_size = 20) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Wins by Decision", x = "Win by", y = "Count")
```

The graph above shows the most common ways fighters win in the UFC. The most common way fighters win is by unanimous decision, followed by KO/TKO and submission. The least common way fighters win is by disqualification and fighter could not continue.

## Wins by Decision Over the Years

```{r}
#| echo: false
#| output: false
#| warning: false

# UFC event per year
library(lubridate)

data_df$date <- ymd(data_df$date)
```


```{r}
#| warning: false
# Line graph instead of bar graph

data_df |> 
  pivot_longer(cols = c(R_win_by_Decision_Majority, 
                        R_win_by_Decision_Split, 
                        R_win_by_Decision_Unanimous, 
                        `R_win_by_KO/TKO`, 
                        R_win_by_Submission, 
                        R_win_by_TKO_Doctor_Stoppage,
                        B_win_by_Decision_Majority,
                        B_win_by_Decision_Split,
                        B_win_by_Decision_Unanimous,
                        `B_win_by_KO/TKO`,
                        B_win_by_Submission,
                        B_win_by_TKO_Doctor_Stoppage),
               names_to = "Win_by", values_to = "Count") |>
  mutate(Win_by = str_replace_all(Win_by, c("R_" = "", "B_" = ""))) |>
  mutate(Win_by = as.factor(Win_by), year = year(date)) |>
  group_by(year, Win_by) |>
  summarise(Count = sum(Count), year) |>
  filter(row_number()==1) |>
  ggplot(aes(x=year, y = Count, color = Win_by)) +
  geom_line() +
  labs(title = "UFC Fight Outcome Over the Years", x = "Year", y = "Count") +
  theme_minimal()

```

The line graph above shows the UFC fight outcomes over the years. The most common way fighters win is by unanimous decision, followed by KO/TKO and submission. The least common way fighters win is by doctor stoppage and majority decision. Around 2016 the number of wins by KO/TKO increased and became the most common way fighters win. 

## Fighter Stance Popularity Over the Years

```{r}
#| warning: false

data_df |>
  pivot_longer(cols = c(R_Stance, B_Stance), 
               names_to = "Fighter_B_Or_R", 
               values_to = "Stance") |>
  mutate(Stance = as.factor(Stance), year = year(date)) |>
  group_by(year, Stance) |>
  summarise(Count = n(), year) |>
  filter(row_number()==1) |>
  ggplot(aes(x=year, y = Count, color = Stance)) +
  geom_line() +
  labs(title = "UFC Fighter Stance Popularity Over the Years", x = "Year", y = "Count") +
  theme_minimal()


```

The line graph above shows the popularity of different fighting stances over the years. The most common stance is orthodox, followed by southpaw and switch. The least common stance is the sideways stance. The popularity of the orthodox stance has increased over the years more than the other stances.

## Mapping UFC Fights


```{r}
#| echo: false
#| output: false
#| warning: false
## install.packages("maps")
library(maps)
library(tidyverse)
world_df <- ggplot2::map_data("world")
```


```{r}
#| echo: false
#| output: false
#| warning: false
# first split the location into city, state, country

ufc_world <- data_df |>
  separate(location, into = c("City", "State", "Country"), sep = ",")
```

```{r}
#| echo: false
#| output: false
#| warning: false
# how many fights have taken place in each country?

country_stat <- ufc_world |>
  group_by(Country) |>
  summarise(n = n()) |>
  arrange(desc(n))

country_stat
```

```{r}
#| echo: false
#| output: false
#| warning: false
# how many fights have taken place in each city?

ufc_world |>
  group_by(City) |>
  summarise(n = n()) |>
  arrange(desc(n))
```

```{r}
#| echo: false
#| output: false
#| warning: false
# how many fights have taken place in each state?

ufc_world |>
  group_by(State) |>
  summarise(n = n()) |>
  arrange(desc(n))
```

```{r}
#| echo: false
#| output: false
#| warning: false
country_stat$Country <- gsub("\"", "", country_stat$Country)

# Trim leading and trailing whitespace
country_stat$Country <- trimws(country_stat$Country)

head(country_stat$Country)
```


```{r}
#| echo: false
#| warning: false

world_full <- left_join(world_df, country_stat, by = c("region" = "Country"))


ggplot(data = world_full, aes(x = long, y = lat, group = group, fill = n)) +
  geom_polygon(color = "black") +
  coord_fixed(1.3) +
  theme_void() +
  scale_fill_viridis_c(option = "plasma", na.value = "grey90") +
  labs(title = "Number of UFC Fights by Country",
       fill = "Number of Fights") +
  theme(legend.position = "bottom")
```

The map above shows the number of UFC fights that have taken place in each country. The United States has the highest number of fights, followed by Canada then Brazil. And the countries with the least number of fights that have taken place are the China, Japan and Argentina.
 

```{r}
#| echo: false
#| output: false
#| warning: false
# state level

state_stat <- ufc_world |>
  group_by(State) |>
  summarise(n = n()) |>
  arrange(desc(n))

state_stat$State <- gsub("\"", "", state_stat$State)

# Trim leading and trailing whitespace
state_stat$State <- trimws(state_stat$State)

head(state_stat$State)
```

## Number of UFC Fights by State

```{r}
#| echo: false
#| warning: false

library(plotly)

state_df <- ggplot2::map_data("state")

state_stat <- state_stat |>
  mutate(State = tolower(State))

state_full <- left_join(state_df, state_stat, by = c("region" = "State"))

ggplot(data = state_full, aes(x = long, y = lat, 
                                       group = group, 
                                       fill = n,
                                       label = region)) +
  geom_polygon(color = "black") +
  coord_fixed(1.3) +
  theme_void() +
  scale_fill_viridis_c(option = "plasma", na.value = "grey90") +
  labs(title = "Number of UFC Fights by State",
       fill = "Number of Fights") +
  theme(legend.position = "bottom")
```

The map above shows the number of UFC fights that have taken place in each state. The states with the highest number of fights are Nevada, California, and Texas. The states with the least number of fights are Maine, Maryland and Wyoming.

```{r}
#| echo: false
#| output: false
#| warning: false
# city level

city_stat <- ufc_world |>
  group_by(City) |>
  summarise(n = n()) |>
  arrange(desc(n))

city_stat$City <- gsub("\"", "", city_stat$City)

# Trim leading and trailing white space
city_stat$City <- trimws(city_stat$City)

head(city_stat$City)
```

```{r}
#| echo: false
#| output: false
#| warning: false
my_cities <- maps::world.cities

usa_cities <- filter(my_cities,country.etc == "USA")

head(usa_cities)

```

```{r}
#| echo: false
#| output: false
#| warning: false

city_full <- left_join(usa_cities, city_stat, by = c("name" = "City"))

```

```{r}
#| echo: false
#| output: false
#| warning: false
usa <- map_data("usa")
```

## Number of UFC Fights by City

```{r}
#| echo: false
#| warning: false

ggplot(data = usa, aes(x = long, y = lat, group = group)) +
  geom_polygon(color = "black", fill = "white") +
  geom_point(data = city_full, aes(x = long, y = lat, size = n, group = NULL), 
             color = "purple3") +
  coord_fixed(1.3) +
  theme_void() +
  labs(title = "Number of UFC Fights by City",
       size = "Number of Fights")
```

The map above shows the number of UFC fights that have taken place in each city in the United States. The cities with the highest number of fights are Las Vegas, Newark, and Chicago.

# Static Shiny App graphs

## Stats trend per Fighter

```{r}
#| echo: false
#| warning: false

library(scales)

fighter_data <- data_df |>
      filter(R_fighter == "Conor McGregor"| B_fighter =="Conor McGregor") |>
      mutate(Date = as.Date(date)) |>
      select(Date, R_fighter, B_fighter,
             R_avg_SIG_STR_landed, B_avg_SIG_STR_landed,
             R_avg_TD_landed, B_avg_TD_landed,
             `R_total_time_fought(seconds)`, `B_total_time_fought(seconds)`)
    
    fighter_stats <- fighter_data |>
      mutate(SIG_STR_landed = if_else(R_fighter ==  "Conor McGregor",
                                      R_avg_SIG_STR_landed, B_avg_SIG_STR_landed),
             TD_landed = if_else(R_fighter == "Conor McGregor",
                                 R_avg_TD_landed, B_avg_TD_landed),
             Total_time_fought = if_else(
               R_fighter ==  "Conor McGregor",
               `R_total_time_fought(seconds)`, `B_total_time_fought(seconds)`)) |>
      # Apply min-max scaling
  mutate(across(c(SIG_STR_landed, TD_landed, Total_time_fought), ~ rescale(.x, to = c(0, 1))))
    

 ggplot(fighter_stats, aes(x = Date)) +
      geom_line(aes(y = SIG_STR_landed, colour = "Significant Strikes Landed")) +
      geom_line(aes(y = TD_landed, colour = "Takedowns Landed")) +
      geom_line(aes(y = Total_time_fought, colour = "Total Time Fought")) +
      labs(title = "Conor McGregor's Performance Over Time", x = "Date", y = "Normalized Stat Value") +
      scale_color_manual(values = c("Significant Strikes Landed" = "blue", 
                                    "Takedowns Landed" = "red", "Total Time Fought" = "green")) +
      theme_minimal()
```

The plot above shows the performance of Conor McGregor over time. The plot shows the normalized values of the significant strikes landed, takedowns landed, and total time fought. The plot shows that Conor McGregor's performance in terms of takedowns landed has been decreasing over time since 2015 while his performance in terms of significant strikes landed has been increasing and his total time fought has been relatively constant with a spike at the end of 2017. 

## Compare fighters Jon Jones vs Francis Ngannou

```{r}
#| echo: false
#| warning: false

# Compare fighters Jon Jones vs Francis Ngannou

JonJ_df <- data_df |>
  filter(R_fighter == "Jon Jones" | B_fighter == "Jon Jones") |>
  mutate(fighter = if_else(R_fighter == "Jon Jones", R_fighter, B_fighter),
         opponent = if_else(R_fighter == "Jon Jones", B_fighter, R_fighter),
         avg_SIG_STR_landed = if_else(R_fighter == "Jon Jones", R_avg_SIG_STR_landed, B_avg_SIG_STR_landed),
         avg_TD_landed = if_else(R_fighter == "Jon Jones", R_avg_TD_landed, B_avg_TD_landed),
         avg_SUB_ATT = if_else(R_fighter == "Jon Jones", R_avg_SUB_ATT, B_avg_SUB_ATT),
         avg_REV = if_else(R_fighter == "Jon Jones", R_avg_REV, B_avg_REV),
         avg_SIG_STR_pct = if_else(R_fighter == "Jon Jones", R_avg_SIG_STR_pct, B_avg_SIG_STR_pct),
         avg_TD_pct = if_else(R_fighter == "Jon Jones", R_avg_TD_pct, B_avg_TD_pct)) |>
  select(fighter, opponent, avg_SIG_STR_landed, avg_TD_landed, avg_SUB_ATT, avg_REV, avg_SIG_STR_pct, avg_TD_pct)

# Select data for Francis Ngannou
Ngannou_df <- data_df |>
  filter(R_fighter == "Francis Ngannou" | B_fighter == "Francis Ngannou") |>
  mutate(fighter = if_else(R_fighter == "Francis Ngannou", R_fighter, B_fighter),
         opponent = if_else(R_fighter == "Francis Ngannou", B_fighter, R_fighter),
         avg_SIG_STR_landed = if_else(R_fighter == "Francis Ngannou", R_avg_SIG_STR_landed, B_avg_SIG_STR_landed),
         avg_TD_landed = if_else(R_fighter == "Francis Ngannou", R_avg_TD_landed, B_avg_TD_landed),
         avg_SUB_ATT = if_else(R_fighter == "Francis Ngannou", R_avg_SUB_ATT, B_avg_SUB_ATT),
         avg_REV = if_else(R_fighter == "Francis Ngannou", R_avg_REV, B_avg_REV),
         avg_SIG_STR_pct = if_else(R_fighter == "Francis Ngannou", R_avg_SIG_STR_pct, B_avg_SIG_STR_pct),
         avg_TD_pct = if_else(R_fighter == "Francis Ngannou", R_avg_TD_pct, B_avg_TD_pct)) |>
  select(fighter, opponent, avg_SIG_STR_landed, avg_TD_landed, avg_SUB_ATT, avg_REV, avg_SIG_STR_pct, avg_TD_pct)
  

fighter_full <- bind_rows(JonJ_df,
                          Ngannou_df)

# Drop NA values, group by fighter, and calculate means for each stat
fighter_full <- fighter_full |>
  drop_na() |>
  group_by(fighter) |>
  summarise(
    avg_SIG_STR_landed = mean(avg_SIG_STR_landed, na.rm = TRUE),
    avg_TD_landed = mean(avg_TD_landed, na.rm = TRUE),
    avg_SUB_ATT = mean(avg_SUB_ATT, na.rm = TRUE),
    avg_REV = mean(avg_REV, na.rm = TRUE),
    avg_SIG_STR_pct = mean(avg_SIG_STR_pct, na.rm = TRUE),
    avg_TD_pct = mean(avg_TD_pct, na.rm = TRUE),
    .groups = 'drop'  # Ensures the result is ungrouped
  )


fighter_long <- fighter_full %>%
  pivot_longer(cols = -fighter, names_to = "stat", values_to = "value")



# Lollipop plot

ggplot(fighter_long, aes(x = fighter, y = value, fill = fighter)) +
  geom_segment(aes(xend = fighter, 
                   yend = 0), 
               color = 
                 "black") +
  geom_point(stat = 
               "identity", 
             position = 
               position_dodge(width = 0.7), 
             size = 3, 
             aes(color=fighter)) +
  facet_wrap(~stat, 
             scales = "free_y") +  
  labs(title = "Fighter Stats Comparison",
       x = "",
       y = "Average Value") +
  theme_minimal() +
  theme(axis.text.x = 
          element_text(
            angle = 0, hjust = 0.5),  
        strip.background = 
          element_blank(),
        strip.text.x = 
          element_text(size = 10))


```

The above plots compare the average statistics of Jon Jones and Francis Ngannou over their UFC careers. The fighters are being compared in terms of significant strikes landed, takedowns landed, submission attempts, reversals, significant strike accuracy, and takedown accuracy. The bar plot shows the average values for each statistic, while the lollipop plot provides a visual comparison of the values for each fighter. From the plots, we can see that Jon Jones has higher average values for significant strikes landed, takedowns landed, and submission attempts, while Francis Ngannou trails behind in all these categories. 

```{r}
#| echo: false
#| warning: false
# lets do the same
library(fmsb)

IT_df <- data_df %>%
  filter(R_fighter == "Ilia Topuria" | 
           B_fighter == "Ilia Topuria") %>%
  mutate(fighter = if_else(R_fighter == "Ilia Topuria", R_fighter, B_fighter),
         opponent = if_else(R_fighter == "Ilia Topuria", B_fighter, R_fighter),
         avg_SIG_STR_landed = if_else(R_fighter == "Ilia Topuria", R_avg_SIG_STR_landed, B_avg_SIG_STR_landed),
         avg_TD_landed = if_else(R_fighter == "Ilia Topuria", R_avg_TD_landed, B_avg_TD_landed),
         avg_SUB_ATT = if_else(R_fighter == "Ilia Topuria", R_avg_SUB_ATT, B_avg_SUB_ATT),
         avg_REV = if_else(R_fighter == "Ilia Topuria", R_avg_REV, B_avg_REV),
         avg_SIG_STR_pct = if_else(R_fighter == "Ilia Topuria", R_avg_SIG_STR_pct, B_avg_SIG_STR_pct),
         avg_TD_pct = if_else(R_fighter == "Ilia Topuria", R_avg_TD_pct, B_avg_TD_pct)) %>%
  select(fighter, opponent, avg_SIG_STR_landed, avg_TD_landed, avg_SUB_ATT, avg_REV, avg_SIG_STR_pct, avg_TD_pct)

Conor_df <- data_df %>%
  filter(R_fighter == "Conor McGregor" | B_fighter == "Conor McGregor") %>%
  mutate(fighter = if_else(R_fighter == "Conor McGregor", R_fighter, B_fighter),
         opponent = if_else(R_fighter == "Conor McGregor", B_fighter, R_fighter),
         avg_SIG_STR_landed = if_else(R_fighter == "Conor McGregor", R_avg_SIG_STR_landed, B_avg_SIG_STR_landed),
         avg_TD_landed = if_else(R_fighter == "Conor McGregor", R_avg_TD_landed, B_avg_TD_landed),
         avg_SUB_ATT = if_else(R_fighter == "Conor McGregor", R_avg_SUB_ATT, B_avg_SUB_ATT),
         avg_REV = if_else(R_fighter == "Conor McGregor", R_avg_REV, B_avg_REV),
         avg_SIG_STR_pct = if_else(R_fighter == "Conor McGregor", R_avg_SIG_STR_pct, B_avg_SIG_STR_pct),
         avg_TD_pct = if_else(R_fighter == "Conor McGregor", R_avg_TD_pct, B_avg_TD_pct)) %>%
  select(fighter, opponent, avg_SIG_STR_landed, avg_TD_landed, avg_SUB_ATT, avg_REV, avg_SIG_STR_pct, avg_TD_pct)

fighter_full <- rbind(IT_df, Conor_df) |>
  drop_na()

# Calculate average values for each statistic
fighter_avg <- fighter_full %>%
  group_by(fighter) %>%
  summarise(avg_SIG_STR_landed = mean(avg_SIG_STR_landed),
            avg_TD_landed = mean(avg_TD_landed),
            avg_SUB_ATT = mean(avg_SUB_ATT),
            avg_REV = mean(avg_REV),
            avg_SIG_STR_pct = mean(avg_SIG_STR_pct),
            avg_TD_pct = mean(avg_TD_pct),
            .groups = 'drop' 
  )

# remove the fighter column
fighter_avg <- fighter_avg %>%
  select(-fighter)

# fighter_avg as data frame
fighter_avg_df <- as.data.frame(fighter_avg)

rownames(fighter_avg_df) <- c("Conor McGregor", "Ilia Topuria")

# Calculate max and min values for each column
max_vals <-fighter_avg_df |> summarise_all(max)
min_vals <- fighter_avg_df |> summarise_all(min)

# Add max and min values to the data frame
fighter_avg_df <- rbind(max_vals, min_vals, fighter_avg_df)


colors_border = c(ggplot2::alpha("blue", 0.2), ggplot2::alpha("red", 0.2))
colors_in = c(ggplot2::alpha("blue", 0.5), ggplot2::alpha("red", 0.5))

radarchart(fighter_avg_df,
           axistype = 5, 
           #custom polygon
           pcol = colors_border, pfcol = 
             colors_in, plwd = 4, plty = 1,
           #custom the grid
           cglcol = "grey", cglty = 1, axislabcol = "black", caxislabels = seq(0, 20, 5), cglwd = 0.8,
           #custom labels
           vlcex = 0.8
           )
# Add a legend
legend("topright", 
       legend = rownames(fighter_avg_df[-c(1, 2),]),
       fill = colors_in,
       border = colors_border,
       bty = "n",
       cex = 0.8, 
       title = "Fighter")


```

The graph above compares the average statistics of Ilia Topuria and Conor McGregor over their UFC careers. The fighters are being compared in terms of significant strikes landed, takedowns landed, submission attempts, reversals, significant strike accuracy, and takedown accuracy. The radar chart shows the average values for each statistic, with the blue line representing Conor McGregor and the red line representing Ilia Topuria. From the chart, we can see that Conor McGregor has higher average values for significant strikes landed, takedowns landed, and submission attempts, while Ilia Topuria has higher average values for reversals, significant strike accuracy, and takedown accuracy. 

Spider or radar charts are useful for comparing multiple quantitative variables for different entities. In this case, we used a radar chart to compare the average fight statistics of two UFC fighters, Ilia Topuria and Conor McGregor. However, radar charts can sometimes be misleading due to the way they represent data. It's important to be cautious when interpreting radar charts and consider the limitations of this type of visualization. The circular pattern of the radar chart can make it difficult to accurately compare values across different variables, and the use of different scales for each variable can also affect the interpretation of the data. Additipnally, the way the categories are arranged around the circle can also impact how the data is perceived. Despite these limitations, radar charts can be a useful tool for visualizing and comparing multivariate data in certain contexts.

This visualization provides a quick overview of how the two fighters compare in terms of these key statistics. It can help fans and analysts understand the strengths and weaknesses of each fighter and predict how they might perform in an upcoming fight.

# Conclusion

In conclusion, this analysis of UFC fight data has provided valuable insights into the dynamics and trends of mixed martial arts competition at the highest level. By examining extensive data covering various aspects such as fight outcomes, fighter characteristics, and fight locations, we have identified key patterns that influence the performance and success of fighters. The study revealed that fight outcomes are significantly impacted by factors like fighter stance, weight class, and fighting style. Additionally, geographical trends highlight the global spread and popularity of UFC events, with the United States hosting the majority of fights.

Through detailed visualizations, we observed the evolution of fighting styles and strategies, as well as changes in the popularity of different weight classes over time. The side-by-side comparison of fighters such as Jon Jones and Francis Ngannou offered a deeper understanding of individual capabilities and career progressions.

This project not only enriches our comprehension of the sport but also serves as a foundational analysis for predictive modeling and strategic decision-making in training and fight preparations. Future research could expand upon this work by integrating more granular data such as injury reports, detailed biometrics, and psychological assessments to further refine the predictions and insights into fighter performance and fight outcomes.



















